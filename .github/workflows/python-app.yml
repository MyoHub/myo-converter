on:
  push:
    branches: ["main", "dev*", " feature*"]
    paths-ignore:
      - "doc/**"
      - "**/README.md"

  pull_request:
    branches: ["main", "dev/*", "feature/*"]
    paths-ignore:
      - "doc/**"
      - "**/README.md"

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    defaults:
      run:
        shell: bash -el {0}
    name: Build (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-22.04"]
#        os: ["ubuntu-22.04", "ubuntu-latest", "windows-latest"]
        python-version: ["3.12"]
        include:
          - os: ubuntu-22.04
            use-mamba: false
            miniforge-variant: Miniforge3
            conda-cmd: conda
          - os: ubuntu-latest
            use-mamba: true
            miniforge-variant: Mambaforge
            conda-cmd: mamba
#          - os: windows-latest
#            use-mamba: true
#            miniforge-variant: Mambaforge
#            conda-cmd: mamba
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff pytest
      - name: Install mesa and patchelf
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get install -y \
              libgl1-mesa-dev \
              libgl1-mesa-glx \
              libglew-dev \
              libosmesa6-dev \
              libglfw3 \
              libosmesa6 \
              software-properties-common
          sudo apt-get install -y patchelf
          sudo apt install build-essential
      - name: Setup ${{ matrix.miniforge-variant }}
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: myoConverter
          auto-activate-base: false
          auto-update-conda: true
          environment-file: conda_env.yml
          miniforge-variant: ${{ matrix.miniforge-variant }}
          miniforge-version: latest
          python-version: ${{ matrix.python-version }}
          use-mamba: ${{ matrix.use-mamba }}
          channels: conda-forge
          channel-priority: flexible
      - name: Output ${{ matrix.miniforge-variant }} information
        run: |
          ${{ matrix.conda-cmd }} info
          ${{ matrix.conda-cmd }} list
          ${{ matrix.conda-cmd }} config --show-sources
          ${{ matrix.conda-cmd }} config --show
      - name: Set PYTHONPATH
        run: |
          echo "PYTHONPATH=home/runner/work/myoConverter/myoConverter" >> $GITHUB_ENV
          echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV
      - name: Test model conversion
        run: |
          conda activate myoConverter
          python myoconverter/tests/model_unit_test.py
